version: "2.1"

services:
  nginx:
    image: nginx:1.17.8
    container_name: nginx
    depends_on:
      - grafana
      - prometheus
      - kibana
      - elasticsearch
    networks:
      - monitoring
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/site.conf:/etc/nginx/conf.d/site.conf
      - ./nginx/ssl:/etc/ssl
      - ./nginx/logs:/var/log/nginx

  grafana:
    image: grafana/grafana:6.6.1
    container_name: grafana
    user: "472"
    networks:
      - monitoring
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/grafana.db:/var/lib/grafana/grafana.db

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.6.0
    container_name: filebeat
    networks:
      - monitoring
    depends_on:
      kibana:
        condition: service_healthy
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./nginx/logs:/var/log/nginx:ro
    environment:
      setup.kibana.host: "kibana:5601"
      output.elasticsearch.hosts: "elasticsearch:9200"
    command: ["--strict.perms=false"]

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.6.0
    container_name: metricbeat
    hostname: metricbeat
    user: "root"
    depends_on:
      kibana:
        condition: service_healthy
    networks:
      - monitoring
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./metricbeat/data:/usr/share/metricbeat/data
      - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
    environment:
      ELASTICSEARCH_HOST: elasticsearch:9200
      KIBANA_HOST: kibana:5601
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    container_name: elasticsearch
    hostname: elasticsearch
    networks:
      - monitoring
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1

  prometheus:
    image: prom/prometheus:v2.16.0
    container_name: prometheus
    depends_on:
      - cadvisor
    networks:
      - monitoring
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.external-url=http://zadanie.com/prometheus/
      - --web.route-prefix=/
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor

  cadvisor:
    image: google/cadvisor:v0.32.0
    container_name: cadvisor
    networks:
      - monitoring
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.0
    container_name: kibana
    networks:
      - monitoring
    depends_on:
      - elasticsearch
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kibana:5601"]
      interval: 2m
      timeout: 10s
      retries: 3

networks:
  monitoring:
